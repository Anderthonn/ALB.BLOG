@model ALB.BLOG.BLO.ViewModels.PageVM

@{
    ViewData["Title"] = "Contato";

    string pageThumbnail = "";

   if (string.IsNullOrEmpty(Model.ThumbnailUrl))
    {
        pageThumbnail = "/blog/assets/img/contact-bg.jpg";
    }
    else
    {
        pageThumbnail = "/thumbnails/" + Model.ThumbnailUrl;
    }
}

<header class="masthead bg-black" style="background-image: url('@pageThumbnail')">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="page-heading">
                    <h1>@Model.Title</h1>
                    <span class="subheading">@Model.ShortDescription</span>
                </div>
            </div>
        </div>
    </div>
</header>
<div class="container mt-5 mb-5">
    <div class="row justify-content-center">
        <div class="col-md-6">            
            <form id="contactForm" action="/Page/ContactEmail" method="post">
                <div class="informacoes-contato mb-4">
                    <h6>Se você quiser conversar, entre em contato.<br> Estou quase sempre online</h6>
                    <br>
                    <h6>Envie uma mensagem!!</h6>
                    <h6>
                        Telefone/Whatsapp: <a href="https://wa.me/5511957451257?text=Oi%2C%20tudo%20bem%3F" target="_blank">+55 (11) 9.95745-1257 </a>
                    </h6>
                    <h6>E-mail: <a href="mailto:anderthonnluyz@outlook.com">anderthonnluyz@outlook.com</a></h6>
                    <h6>Intagram: <a href="https://www.instagram.com/t.h.o.n.n" target="_blank">t.h.o.n.n</a></h6>
                </div>
                <div class="form-group mb-4">
                    <label for="nome" class="mb-2 title">Nome:</label>
                    <input type="text" class="form-control form-alb-input" id="nome" name="Name" placeholder="Seu Nome">
                </div>

                <div class="form-group mb-4">
                    <label for="email" class="mb-2 title">Email:</label>
                    <input type="email" class="form-control form-alb-input" id="email" name="UserEmail" placeholder="Seu Email">
                </div>

                <div class="form-group mb-4">
                    <label for="subject" class="mb-2 title">Assunto:</label>
                    <input type="text" class="form-control form-alb-input" id="subject" name="Subject" rows="4" placeholder="Assunto"></input>
                </div>

                <div class="form-group mb-4">
                    <label for="mensagem" class="mb-2 title">Mensagem:</label>
                    <textarea class="form-control form-alb-input" id="mensagem" name="Message" rows="4" placeholder="Sua Mensagem"></textarea>
                </div>

                <button type="submit" class="btn btn-alb">Enviar</button>
            </form>
        </div>
    </div>
</div>
<main class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                @Html.Raw(Model.Description)
            </div>
        </div>
    </div>
</main>
<script>
    document.getElementById("contactForm").addEventListener("submit", function (event) {
        event.preventDefault();

        var nome = document.getElementsByName("Name")[0].value;
        var email = document.getElementsByName("UserEmail")[0].value;
        var subject = document.getElementsByName("Subject")[0].value;
        var mensagem = document.getElementsByName("Message")[0].value;

        var formData = {
            Name: nome,
            UserEmail: email,
            Subject: subject,
            Message: mensagem
        };

        fetch("/Page/ContactEmail", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(formData)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error(@Model.EmailResultMessage);
                }
                return response.json();
            })
            .then(data => {
                alert(@Model.EmailResultMessage);
                location.reload();
            })
            .catch(error => {
                alert(error.message);
                location.reload();
            });
    });
</script>